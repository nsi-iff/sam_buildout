#!/usr/bin/env python
# coding: utf-8

import txredisapi
import cyclone.web
from twisted.application import service, internet
from nsisam.xmlrpc import XmlrpcHandler
from nsisam.auth import Authentication
from ConfigParser import RawConfigParser

CONF = '${conf-path}'
DB_FILE = '${db-file}'

def get_address_from_string(string):
    string_split = string.split(',')
    return string_split[0], int(string_split[1])

def get_storage(conf):
    config = RawConfigParser()
    config.read(CONF)
    section_name = 'redis_server_list'
    address_list = [get_address_from_string(config.get(section_name, opt)) \
                      for opt in config.options(section_name)]
    redis_connection_list = [txredisapi.lazyRedisConnectionPool(*address) \
                                for address in address_list]
    return redis_connection_list

def get_authenticator(conf):
    return Authentication(DB_FILE)

class SAM(cyclone.web.Application):
    
    def __init__(self):
        handlers = [
            (r"/xmlrpc", XmlrpcHandler),
        ]
      
        settings = {
            "db_list": get_storage(CONF),
            "auth": get_authenticator(CONF),
        }

        cyclone.web.Application.__init__(self, handlers, **settings)


application = service.Application("SAM")
srv = internet.TCPServer(${port}, SAM(), interface='${host}')
srv.setServiceParent(application)
